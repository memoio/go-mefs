// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mefs.proto

package proto

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type UserBLS12Config struct {
	PubkeyBls            []byte   `protobuf:"bytes,2,opt,name=pubkeyBls,proto3" json:"pubkeyBls,omitempty"`
	PubkeyG              []byte   `protobuf:"bytes,3,opt,name=pubkeyG,proto3" json:"pubkeyG,omitempty"`
	PubkeyU              [][]byte `protobuf:"bytes,4,rep,name=pubkeyU,proto3" json:"pubkeyU,omitempty"`
	PubkeyW              [][]byte `protobuf:"bytes,5,rep,name=pubkeyW,proto3" json:"pubkeyW,omitempty"`
	PrikeyBls            []byte   `protobuf:"bytes,6,opt,name=prikeyBls,proto3" json:"prikeyBls,omitempty"`
	X                    []byte   `protobuf:"bytes,7,opt,name=X,proto3" json:"X,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserBLS12Config) Reset()         { *m = UserBLS12Config{} }
func (m *UserBLS12Config) String() string { return proto.CompactTextString(m) }
func (*UserBLS12Config) ProtoMessage()    {}
func (*UserBLS12Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3c77393cf6fe78, []int{0}
}
func (m *UserBLS12Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserBLS12Config.Unmarshal(m, b)
}
func (m *UserBLS12Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserBLS12Config.Marshal(b, m, deterministic)
}
func (m *UserBLS12Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserBLS12Config.Merge(m, src)
}
func (m *UserBLS12Config) XXX_Size() int {
	return xxx_messageInfo_UserBLS12Config.Size(m)
}
func (m *UserBLS12Config) XXX_DiscardUnknown() {
	xxx_messageInfo_UserBLS12Config.DiscardUnknown(m)
}

var xxx_messageInfo_UserBLS12Config proto.InternalMessageInfo

func (m *UserBLS12Config) GetPubkeyBls() []byte {
	if m != nil {
		return m.PubkeyBls
	}
	return nil
}

func (m *UserBLS12Config) GetPubkeyG() []byte {
	if m != nil {
		return m.PubkeyG
	}
	return nil
}

func (m *UserBLS12Config) GetPubkeyU() [][]byte {
	if m != nil {
		return m.PubkeyU
	}
	return nil
}

func (m *UserBLS12Config) GetPubkeyW() [][]byte {
	if m != nil {
		return m.PubkeyW
	}
	return nil
}

func (m *UserBLS12Config) GetPrikeyBls() []byte {
	if m != nil {
		return m.PrikeyBls
	}
	return nil
}

func (m *UserBLS12Config) GetX() []byte {
	if m != nil {
		return m.X
	}
	return nil
}

type SuperBlockInfo struct {
	BucketsSet           []uint64 `protobuf:"varint,1,rep,packed,name=BucketsSet,proto3" json:"BucketsSet,omitempty"`
	MetaBackupCount      int32    `protobuf:"varint,2,opt,name=MetaBackupCount,proto3" json:"MetaBackupCount,omitempty"`
	NextBucketID         int32    `protobuf:"varint,3,opt,name=NextBucketID,proto3" json:"NextBucketID,omitempty"`
	MagicNumber          int32    `protobuf:"varint,4,opt,name=MagicNumber,proto3" json:"MagicNumber,omitempty"`
	Version              int32    `protobuf:"varint,5,opt,name=Version,proto3" json:"Version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuperBlockInfo) Reset()         { *m = SuperBlockInfo{} }
func (m *SuperBlockInfo) String() string { return proto.CompactTextString(m) }
func (*SuperBlockInfo) ProtoMessage()    {}
func (*SuperBlockInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3c77393cf6fe78, []int{1}
}
func (m *SuperBlockInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuperBlockInfo.Unmarshal(m, b)
}
func (m *SuperBlockInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuperBlockInfo.Marshal(b, m, deterministic)
}
func (m *SuperBlockInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuperBlockInfo.Merge(m, src)
}
func (m *SuperBlockInfo) XXX_Size() int {
	return xxx_messageInfo_SuperBlockInfo.Size(m)
}
func (m *SuperBlockInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SuperBlockInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SuperBlockInfo proto.InternalMessageInfo

func (m *SuperBlockInfo) GetBucketsSet() []uint64 {
	if m != nil {
		return m.BucketsSet
	}
	return nil
}

func (m *SuperBlockInfo) GetMetaBackupCount() int32 {
	if m != nil {
		return m.MetaBackupCount
	}
	return 0
}

func (m *SuperBlockInfo) GetNextBucketID() int32 {
	if m != nil {
		return m.NextBucketID
	}
	return 0
}

func (m *SuperBlockInfo) GetMagicNumber() int32 {
	if m != nil {
		return m.MagicNumber
	}
	return 0
}

func (m *SuperBlockInfo) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type BucketInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	BucketID             int32    `protobuf:"varint,2,opt,name=BucketID,proto3" json:"BucketID,omitempty"`
	Policy               int32    `protobuf:"varint,3,opt,name=Policy,proto3" json:"Policy,omitempty"`
	DataCount            int32    `protobuf:"varint,4,opt,name=DataCount,proto3" json:"DataCount,omitempty"`
	ParityCount          int32    `protobuf:"varint,5,opt,name=ParityCount,proto3" json:"ParityCount,omitempty"`
	CurStripe            int64    `protobuf:"varint,6,opt,name=CurStripe,proto3" json:"CurStripe,omitempty"`
	NextOffset           int64    `protobuf:"varint,7,opt,name=NextOffset,proto3" json:"NextOffset,omitempty"`
	ObjectsBlockSize     int64    `protobuf:"varint,8,opt,name=ObjectsBlockSize,proto3" json:"ObjectsBlockSize,omitempty"`
	SegmentSize          int32    `protobuf:"varint,9,opt,name=SegmentSize,proto3" json:"SegmentSize,omitempty"`
	TagFlag              int32    `protobuf:"varint,10,opt,name=TagFlag,proto3" json:"TagFlag,omitempty"`
	Ctime                int64    `protobuf:"varint,11,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	LastModified         int64    `protobuf:"varint,12,opt,name=LastModified,proto3" json:"LastModified,omitempty"`
	Deletion             bool     `protobuf:"varint,13,opt,name=Deletion,proto3" json:"Deletion,omitempty"`
	Encryption           bool     `protobuf:"varint,14,opt,name=Encryption,proto3" json:"Encryption,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BucketInfo) Reset()         { *m = BucketInfo{} }
func (m *BucketInfo) String() string { return proto.CompactTextString(m) }
func (*BucketInfo) ProtoMessage()    {}
func (*BucketInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3c77393cf6fe78, []int{2}
}
func (m *BucketInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketInfo.Unmarshal(m, b)
}
func (m *BucketInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketInfo.Marshal(b, m, deterministic)
}
func (m *BucketInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketInfo.Merge(m, src)
}
func (m *BucketInfo) XXX_Size() int {
	return xxx_messageInfo_BucketInfo.Size(m)
}
func (m *BucketInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BucketInfo proto.InternalMessageInfo

func (m *BucketInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BucketInfo) GetBucketID() int32 {
	if m != nil {
		return m.BucketID
	}
	return 0
}

func (m *BucketInfo) GetPolicy() int32 {
	if m != nil {
		return m.Policy
	}
	return 0
}

func (m *BucketInfo) GetDataCount() int32 {
	if m != nil {
		return m.DataCount
	}
	return 0
}

func (m *BucketInfo) GetParityCount() int32 {
	if m != nil {
		return m.ParityCount
	}
	return 0
}

func (m *BucketInfo) GetCurStripe() int64 {
	if m != nil {
		return m.CurStripe
	}
	return 0
}

func (m *BucketInfo) GetNextOffset() int64 {
	if m != nil {
		return m.NextOffset
	}
	return 0
}

func (m *BucketInfo) GetObjectsBlockSize() int64 {
	if m != nil {
		return m.ObjectsBlockSize
	}
	return 0
}

func (m *BucketInfo) GetSegmentSize() int32 {
	if m != nil {
		return m.SegmentSize
	}
	return 0
}

func (m *BucketInfo) GetTagFlag() int32 {
	if m != nil {
		return m.TagFlag
	}
	return 0
}

func (m *BucketInfo) GetCtime() int64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *BucketInfo) GetLastModified() int64 {
	if m != nil {
		return m.LastModified
	}
	return 0
}

func (m *BucketInfo) GetDeletion() bool {
	if m != nil {
		return m.Deletion
	}
	return false
}

func (m *BucketInfo) GetEncryption() bool {
	if m != nil {
		return m.Encryption
	}
	return false
}

type ObjectInfo struct {
	Name                 string            `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	BucketID             int32             `protobuf:"varint,2,opt,name=BucketID,proto3" json:"BucketID,omitempty"`
	Length               int64             `protobuf:"varint,3,opt,name=Length,proto3" json:"Length,omitempty"`
	StripeStart          int64             `protobuf:"varint,4,opt,name=StripeStart,proto3" json:"StripeStart,omitempty"`
	Offset               int64             `protobuf:"varint,5,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Ctime                int64             `protobuf:"varint,6,opt,name=Ctime,proto3" json:"Ctime,omitempty"`
	ContentType          string            `protobuf:"bytes,7,opt,name=ContentType,proto3" json:"ContentType,omitempty"`
	ETag                 string            `protobuf:"bytes,8,opt,name=ETag,proto3" json:"ETag,omitempty"`
	Deletion             bool              `protobuf:"varint,9,opt,name=Deletion,proto3" json:"Deletion,omitempty"`
	Dir                  bool              `protobuf:"varint,10,opt,name=Dir,proto3" json:"Dir,omitempty"`
	Metadata             map[string]string `protobuf:"bytes,11,rep,name=Metadata,proto3" json:"Metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NextPart             string            `protobuf:"bytes,12,opt,name=NextPart,proto3" json:"NextPart,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ObjectInfo) Reset()         { *m = ObjectInfo{} }
func (m *ObjectInfo) String() string { return proto.CompactTextString(m) }
func (*ObjectInfo) ProtoMessage()    {}
func (*ObjectInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3c77393cf6fe78, []int{3}
}
func (m *ObjectInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ObjectInfo.Unmarshal(m, b)
}
func (m *ObjectInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ObjectInfo.Marshal(b, m, deterministic)
}
func (m *ObjectInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ObjectInfo.Merge(m, src)
}
func (m *ObjectInfo) XXX_Size() int {
	return xxx_messageInfo_ObjectInfo.Size(m)
}
func (m *ObjectInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ObjectInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ObjectInfo proto.InternalMessageInfo

func (m *ObjectInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ObjectInfo) GetBucketID() int32 {
	if m != nil {
		return m.BucketID
	}
	return 0
}

func (m *ObjectInfo) GetLength() int64 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *ObjectInfo) GetStripeStart() int64 {
	if m != nil {
		return m.StripeStart
	}
	return 0
}

func (m *ObjectInfo) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ObjectInfo) GetCtime() int64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *ObjectInfo) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *ObjectInfo) GetETag() string {
	if m != nil {
		return m.ETag
	}
	return ""
}

func (m *ObjectInfo) GetDeletion() bool {
	if m != nil {
		return m.Deletion
	}
	return false
}

func (m *ObjectInfo) GetDir() bool {
	if m != nil {
		return m.Dir
	}
	return false
}

func (m *ObjectInfo) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *ObjectInfo) GetNextPart() string {
	if m != nil {
		return m.NextPart
	}
	return ""
}

type BucketOptions struct {
	Version     int32 `protobuf:"varint,1,opt,name=Version,proto3" json:"Version,omitempty"`
	Policy      int32 `protobuf:"varint,2,opt,name=Policy,proto3" json:"Policy,omitempty"`
	DataCount   int32 `protobuf:"varint,3,opt,name=DataCount,proto3" json:"DataCount,omitempty"`
	ParityCount int32 `protobuf:"varint,4,opt,name=ParityCount,proto3" json:"ParityCount,omitempty"`
	TagFlag     int32 `protobuf:"varint,5,opt,name=TagFlag,proto3" json:"TagFlag,omitempty"`
	SegmentSize int32 `protobuf:"varint,6,opt,name=SegmentSize,proto3" json:"SegmentSize,omitempty"`
	// number of segments
	SegmentCount         int32    `protobuf:"varint,7,opt,name=SegmentCount,proto3" json:"SegmentCount,omitempty"`
	Encryption           bool     `protobuf:"varint,8,opt,name=Encryption,proto3" json:"Encryption,omitempty"`
	Start                int32    `protobuf:"varint,11,opt,name=Start,proto3" json:"Start,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BucketOptions) Reset()         { *m = BucketOptions{} }
func (m *BucketOptions) String() string { return proto.CompactTextString(m) }
func (*BucketOptions) ProtoMessage()    {}
func (*BucketOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3c77393cf6fe78, []int{4}
}
func (m *BucketOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BucketOptions.Unmarshal(m, b)
}
func (m *BucketOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BucketOptions.Marshal(b, m, deterministic)
}
func (m *BucketOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BucketOptions.Merge(m, src)
}
func (m *BucketOptions) XXX_Size() int {
	return xxx_messageInfo_BucketOptions.Size(m)
}
func (m *BucketOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_BucketOptions.DiscardUnknown(m)
}

var xxx_messageInfo_BucketOptions proto.InternalMessageInfo

func (m *BucketOptions) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *BucketOptions) GetPolicy() int32 {
	if m != nil {
		return m.Policy
	}
	return 0
}

func (m *BucketOptions) GetDataCount() int32 {
	if m != nil {
		return m.DataCount
	}
	return 0
}

func (m *BucketOptions) GetParityCount() int32 {
	if m != nil {
		return m.ParityCount
	}
	return 0
}

func (m *BucketOptions) GetTagFlag() int32 {
	if m != nil {
		return m.TagFlag
	}
	return 0
}

func (m *BucketOptions) GetSegmentSize() int32 {
	if m != nil {
		return m.SegmentSize
	}
	return 0
}

func (m *BucketOptions) GetSegmentCount() int32 {
	if m != nil {
		return m.SegmentCount
	}
	return 0
}

func (m *BucketOptions) GetEncryption() bool {
	if m != nil {
		return m.Encryption
	}
	return false
}

func (m *BucketOptions) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

type ShareLink struct {
	UserID               string         `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	QueryID              string         `protobuf:"bytes,2,opt,name=QueryID,proto3" json:"QueryID,omitempty"`
	BucketName           string         `protobuf:"bytes,3,opt,name=BucketName,proto3" json:"BucketName,omitempty"`
	ObjectName           string         `protobuf:"bytes,4,opt,name=ObjectName,proto3" json:"ObjectName,omitempty"`
	Etag                 string         `protobuf:"bytes,5,opt,name=Etag,proto3" json:"Etag,omitempty"`
	BOptions             *BucketOptions `protobuf:"bytes,6,opt,name=BOptions,proto3" json:"BOptions,omitempty"`
	BucketID             int32          `protobuf:"varint,7,opt,name=BucketID,proto3" json:"BucketID,omitempty"`
	Start                int64          `protobuf:"varint,8,opt,name=Start,proto3" json:"Start,omitempty"`
	Length               int64          `protobuf:"varint,9,opt,name=Length,proto3" json:"Length,omitempty"`
	Encryption           bool           `protobuf:"varint,10,opt,name=Encryption,proto3" json:"Encryption,omitempty"`
	DecKey               []byte         `protobuf:"bytes,11,opt,name=DecKey,proto3" json:"DecKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ShareLink) Reset()         { *m = ShareLink{} }
func (m *ShareLink) String() string { return proto.CompactTextString(m) }
func (*ShareLink) ProtoMessage()    {}
func (*ShareLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3c77393cf6fe78, []int{5}
}
func (m *ShareLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShareLink.Unmarshal(m, b)
}
func (m *ShareLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShareLink.Marshal(b, m, deterministic)
}
func (m *ShareLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShareLink.Merge(m, src)
}
func (m *ShareLink) XXX_Size() int {
	return xxx_messageInfo_ShareLink.Size(m)
}
func (m *ShareLink) XXX_DiscardUnknown() {
	xxx_messageInfo_ShareLink.DiscardUnknown(m)
}

var xxx_messageInfo_ShareLink proto.InternalMessageInfo

func (m *ShareLink) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *ShareLink) GetQueryID() string {
	if m != nil {
		return m.QueryID
	}
	return ""
}

func (m *ShareLink) GetBucketName() string {
	if m != nil {
		return m.BucketName
	}
	return ""
}

func (m *ShareLink) GetObjectName() string {
	if m != nil {
		return m.ObjectName
	}
	return ""
}

func (m *ShareLink) GetEtag() string {
	if m != nil {
		return m.Etag
	}
	return ""
}

func (m *ShareLink) GetBOptions() *BucketOptions {
	if m != nil {
		return m.BOptions
	}
	return nil
}

func (m *ShareLink) GetBucketID() int32 {
	if m != nil {
		return m.BucketID
	}
	return 0
}

func (m *ShareLink) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *ShareLink) GetLength() int64 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *ShareLink) GetEncryption() bool {
	if m != nil {
		return m.Encryption
	}
	return false
}

func (m *ShareLink) GetDecKey() []byte {
	if m != nil {
		return m.DecKey
	}
	return nil
}

type ChalInfo struct {
	QueryID              string   `protobuf:"bytes,1,opt,name=QueryID,proto3" json:"QueryID,omitempty"`
	KeeperID             string   `protobuf:"bytes,2,opt,name=KeeperID,proto3" json:"KeeperID,omitempty"`
	ProviderID           string   `protobuf:"bytes,3,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	UserID               string   `protobuf:"bytes,4,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ChalTime             int64    `protobuf:"varint,5,opt,name=ChalTime,proto3" json:"ChalTime,omitempty"`
	ChalLength           int64    `protobuf:"varint,6,opt,name=ChalLength,proto3" json:"ChalLength,omitempty"`
	SuccessLength        int64    `protobuf:"varint,7,opt,name=SuccessLength,proto3" json:"SuccessLength,omitempty"`
	TotalLength          int64    `protobuf:"varint,8,opt,name=TotalLength,proto3" json:"TotalLength,omitempty"`
	Blocks               []string `protobuf:"bytes,9,rep,name=Blocks,proto3" json:"Blocks,omitempty"`
	FaultBlocks          []string `protobuf:"bytes,10,rep,name=FaultBlocks,proto3" json:"FaultBlocks,omitempty"`
	BlsProof             string   `protobuf:"bytes,11,opt,name=BlsProof,proto3" json:"BlsProof,omitempty"`
	Res                  bool     `protobuf:"varint,12,opt,name=Res,proto3" json:"Res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChalInfo) Reset()         { *m = ChalInfo{} }
func (m *ChalInfo) String() string { return proto.CompactTextString(m) }
func (*ChalInfo) ProtoMessage()    {}
func (*ChalInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3c77393cf6fe78, []int{6}
}
func (m *ChalInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChalInfo.Unmarshal(m, b)
}
func (m *ChalInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChalInfo.Marshal(b, m, deterministic)
}
func (m *ChalInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChalInfo.Merge(m, src)
}
func (m *ChalInfo) XXX_Size() int {
	return xxx_messageInfo_ChalInfo.Size(m)
}
func (m *ChalInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ChalInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ChalInfo proto.InternalMessageInfo

func (m *ChalInfo) GetQueryID() string {
	if m != nil {
		return m.QueryID
	}
	return ""
}

func (m *ChalInfo) GetKeeperID() string {
	if m != nil {
		return m.KeeperID
	}
	return ""
}

func (m *ChalInfo) GetProviderID() string {
	if m != nil {
		return m.ProviderID
	}
	return ""
}

func (m *ChalInfo) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *ChalInfo) GetChalTime() int64 {
	if m != nil {
		return m.ChalTime
	}
	return 0
}

func (m *ChalInfo) GetChalLength() int64 {
	if m != nil {
		return m.ChalLength
	}
	return 0
}

func (m *ChalInfo) GetSuccessLength() int64 {
	if m != nil {
		return m.SuccessLength
	}
	return 0
}

func (m *ChalInfo) GetTotalLength() int64 {
	if m != nil {
		return m.TotalLength
	}
	return 0
}

func (m *ChalInfo) GetBlocks() []string {
	if m != nil {
		return m.Blocks
	}
	return nil
}

func (m *ChalInfo) GetFaultBlocks() []string {
	if m != nil {
		return m.FaultBlocks
	}
	return nil
}

func (m *ChalInfo) GetBlsProof() string {
	if m != nil {
		return m.BlsProof
	}
	return ""
}

func (m *ChalInfo) GetRes() bool {
	if m != nil {
		return m.Res
	}
	return false
}

type ChannelSign struct {
	ChannelID            string   `protobuf:"bytes,1,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	Sig                  []byte   `protobuf:"bytes,3,opt,name=Sig,proto3" json:"Sig,omitempty"`
	PubKey               []byte   `protobuf:"bytes,4,opt,name=PubKey,proto3" json:"PubKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelSign) Reset()         { *m = ChannelSign{} }
func (m *ChannelSign) String() string { return proto.CompactTextString(m) }
func (*ChannelSign) ProtoMessage()    {}
func (*ChannelSign) Descriptor() ([]byte, []int) {
	return fileDescriptor_2b3c77393cf6fe78, []int{7}
}
func (m *ChannelSign) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelSign.Unmarshal(m, b)
}
func (m *ChannelSign) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelSign.Marshal(b, m, deterministic)
}
func (m *ChannelSign) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelSign.Merge(m, src)
}
func (m *ChannelSign) XXX_Size() int {
	return xxx_messageInfo_ChannelSign.Size(m)
}
func (m *ChannelSign) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelSign.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelSign proto.InternalMessageInfo

func (m *ChannelSign) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

func (m *ChannelSign) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ChannelSign) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (m *ChannelSign) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func init() {
	proto.RegisterType((*UserBLS12Config)(nil), "proto.UserBLS12Config")
	proto.RegisterType((*SuperBlockInfo)(nil), "proto.SuperBlockInfo")
	proto.RegisterType((*BucketInfo)(nil), "proto.BucketInfo")
	proto.RegisterType((*ObjectInfo)(nil), "proto.ObjectInfo")
	proto.RegisterMapType((map[string]string)(nil), "proto.ObjectInfo.MetadataEntry")
	proto.RegisterType((*BucketOptions)(nil), "proto.BucketOptions")
	proto.RegisterType((*ShareLink)(nil), "proto.ShareLink")
	proto.RegisterType((*ChalInfo)(nil), "proto.ChalInfo")
	proto.RegisterType((*ChannelSign)(nil), "proto.ChannelSign")
}

func init() { proto.RegisterFile("mefs.proto", fileDescriptor_2b3c77393cf6fe78) }

var fileDescriptor_2b3c77393cf6fe78 = []byte{
	// 967 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x4d, 0x6f, 0xe3, 0x36,
	0x10, 0x85, 0x2c, 0xdb, 0x91, 0x68, 0x67, 0x77, 0x21, 0x2c, 0x16, 0x42, 0x50, 0xb4, 0x86, 0xd0,
	0x83, 0xd1, 0x43, 0xd0, 0xa6, 0x97, 0xa2, 0x7b, 0xb3, 0x9d, 0x2d, 0x82, 0xcd, 0x87, 0x4b, 0x39,
	0xbb, 0x7b, 0xa5, 0x95, 0xb1, 0xa2, 0x5a, 0x96, 0x0c, 0x89, 0x0a, 0xaa, 0xfe, 0x91, 0xde, 0x7a,
	0xef, 0xad, 0xe7, 0xde, 0xfb, 0x4f, 0xfa, 0x43, 0x8a, 0x19, 0xd2, 0x12, 0xe5, 0xa0, 0x28, 0xd0,
	0x53, 0xf8, 0xde, 0x90, 0xe2, 0xf0, 0xbd, 0x99, 0x89, 0x19, 0xdb, 0xc1, 0xa6, 0x3c, 0xdf, 0x17,
	0xb9, 0xcc, 0xbd, 0x01, 0xfd, 0x09, 0x7e, 0xb7, 0xd8, 0xcb, 0xfb, 0x12, 0x8a, 0xd9, 0x75, 0xf8,
	0xcd, 0xc5, 0x3c, 0xcf, 0x36, 0x49, 0xec, 0x7d, 0xc6, 0xdc, 0x7d, 0xb5, 0xde, 0x42, 0x3d, 0x4b,
	0x4b, 0xbf, 0x37, 0xb1, 0xa6, 0x63, 0xde, 0x12, 0x9e, 0xcf, 0x4e, 0x14, 0xf8, 0xc1, 0xb7, 0x29,
	0x76, 0x80, 0x6d, 0xe4, 0xde, 0xef, 0x4f, 0xec, 0x36, 0x72, 0xdf, 0x46, 0x3e, 0xfa, 0x03, 0x33,
	0xf2, 0x91, 0xee, 0x2a, 0x12, 0x7d, 0xd7, 0x50, 0xdf, 0x75, 0x20, 0xbc, 0x31, 0xb3, 0x3e, 0xf9,
	0x27, 0xc4, 0x5a, 0x9f, 0x82, 0x3f, 0x2d, 0xf6, 0x22, 0xac, 0xf6, 0x50, 0xcc, 0xd2, 0x3c, 0xda,
	0x5e, 0x65, 0x9b, 0xdc, 0xfb, 0x9c, 0xb1, 0x59, 0x15, 0x6d, 0x41, 0x96, 0x21, 0x48, 0xdf, 0x9a,
	0xd8, 0xd3, 0x3e, 0x37, 0x18, 0x6f, 0xca, 0x5e, 0xde, 0x80, 0x14, 0x33, 0x11, 0x6d, 0xab, 0xfd,
	0x3c, 0xaf, 0x32, 0x49, 0x0f, 0x1a, 0xf0, 0x63, 0xda, 0x0b, 0xd8, 0xf8, 0x16, 0x7e, 0x96, 0xea,
	0xec, 0xd5, 0x82, 0xde, 0x36, 0xe0, 0x1d, 0xce, 0x9b, 0xb0, 0xd1, 0x8d, 0x88, 0x93, 0xe8, 0xb6,
	0xda, 0xad, 0xa1, 0xf0, 0xfb, 0xb4, 0xc5, 0xa4, 0xf0, 0xa1, 0x1f, 0xa0, 0x28, 0x93, 0x3c, 0xf3,
	0x07, 0x14, 0x3d, 0xc0, 0xe0, 0x0f, 0xfb, 0x90, 0x2a, 0x25, 0xee, 0xb1, 0xfe, 0xad, 0xd8, 0x81,
	0x6f, 0x4d, 0xac, 0xa9, 0xcb, 0x69, 0xed, 0x9d, 0x31, 0xa7, 0xb9, 0x5e, 0x65, 0xd9, 0x60, 0xef,
	0x0d, 0x1b, 0x2e, 0xf3, 0x34, 0x89, 0x6a, 0x9d, 0x98, 0x46, 0xa8, 0xdf, 0x42, 0x48, 0xa1, 0x9e,
	0xa6, 0x12, 0x6a, 0x09, 0x4c, 0x78, 0x29, 0x8a, 0x44, 0xd6, 0x2a, 0xae, 0x52, 0x32, 0x29, 0x3c,
	0x3f, 0xaf, 0x8a, 0x50, 0x16, 0xc9, 0x1e, 0x48, 0x7f, 0x9b, 0xb7, 0x04, 0xca, 0x8b, 0x02, 0xdc,
	0x6d, 0x36, 0x25, 0x48, 0x32, 0xc2, 0xe6, 0x06, 0xe3, 0x7d, 0xc5, 0x5e, 0xdd, 0xad, 0x7f, 0x82,
	0x48, 0x96, 0x64, 0x49, 0x98, 0xfc, 0x02, 0xbe, 0x43, 0xbb, 0x9e, 0xf1, 0x98, 0x4b, 0x08, 0xf1,
	0x0e, 0x32, 0x49, 0xdb, 0x5c, 0x95, 0x8b, 0x41, 0xa1, 0x78, 0x2b, 0x11, 0xbf, 0x4b, 0x45, 0xec,
	0x33, 0x25, 0x9e, 0x86, 0xde, 0x6b, 0x36, 0x98, 0xcb, 0x64, 0x07, 0xfe, 0x88, 0x3e, 0xae, 0x00,
	0x5a, 0x76, 0x2d, 0x4a, 0x79, 0x93, 0x3f, 0x24, 0x9b, 0x04, 0x1e, 0xfc, 0x31, 0x05, 0x3b, 0x1c,
	0x6a, 0xba, 0x80, 0x14, 0x24, 0x3a, 0x72, 0x3a, 0xb1, 0xa6, 0x0e, 0x6f, 0x30, 0xbe, 0xee, 0x32,
	0x8b, 0x8a, 0x7a, 0x4f, 0xd1, 0x17, 0x14, 0x35, 0x98, 0xe0, 0x37, 0x9b, 0x31, 0xf5, 0x8c, 0xff,
	0x6b, 0xd9, 0x35, 0x64, 0xb1, 0x7c, 0x24, 0xcb, 0x6c, 0xae, 0x11, 0x09, 0x41, 0xf2, 0x86, 0x52,
	0x14, 0xca, 0x34, 0x9b, 0x9b, 0x14, 0x9e, 0xd4, 0x92, 0x0f, 0xd4, 0x49, 0x2d, 0x77, 0x23, 0xc3,
	0xd0, 0x94, 0x61, 0xc2, 0x46, 0xf3, 0x3c, 0x93, 0x90, 0xc9, 0x55, 0xbd, 0x07, 0x72, 0xc9, 0xe5,
	0x26, 0x85, 0x99, 0x5f, 0xae, 0x44, 0x4c, 0xd6, 0xb8, 0x9c, 0xd6, 0x1d, 0x61, 0xdc, 0x23, 0x61,
	0x5e, 0x31, 0x7b, 0x91, 0x14, 0x64, 0x82, 0xc3, 0x71, 0xe9, 0xbd, 0x65, 0x0e, 0x36, 0xcc, 0x83,
	0x90, 0xc2, 0x1f, 0x4d, 0xec, 0xe9, 0xe8, 0xe2, 0x0b, 0x35, 0x47, 0xce, 0x5b, 0x81, 0xce, 0x0f,
	0x3b, 0x2e, 0x33, 0x59, 0xd4, 0xbc, 0x39, 0x80, 0x57, 0x61, 0xcd, 0x2c, 0xf1, 0xb5, 0x63, 0x4a,
	0xa1, 0xc1, 0x67, 0x6f, 0xd9, 0x69, 0xe7, 0x18, 0xde, 0xbd, 0x85, 0x5a, 0x8b, 0x8c, 0x4b, 0x7c,
	0xf5, 0x93, 0x48, 0x2b, 0x20, 0x81, 0x5d, 0xae, 0xc0, 0xf7, 0xbd, 0xef, 0xac, 0xe0, 0xd7, 0x1e,
	0x3b, 0x55, 0x72, 0xdf, 0x91, 0x63, 0xa5, 0xd9, 0x7f, 0x56, 0xa7, 0xff, 0x8c, 0x06, 0xea, 0xfd,
	0x7b, 0x03, 0xd9, 0xff, 0xd1, 0x40, 0xfd, 0xe7, 0x0d, 0x64, 0x14, 0xed, 0xa0, 0x5b, 0xb4, 0x47,
	0x05, 0x3f, 0x7c, 0x5e, 0xf0, 0x01, 0x1b, 0x6b, 0xa8, 0x3e, 0x7f, 0xa2, 0x66, 0x8e, 0xc9, 0x1d,
	0x15, 0xa9, 0x73, 0x5c, 0xa4, 0xa8, 0x8e, 0xaa, 0xa3, 0x11, 0x1d, 0x56, 0x20, 0xf8, 0xab, 0xc7,
	0xdc, 0xf0, 0x51, 0x14, 0x70, 0x9d, 0x64, 0x5b, 0x7c, 0x3b, 0xce, 0xf8, 0xab, 0x85, 0x96, 0x55,
	0x23, 0xcc, 0xfd, 0xc7, 0x0a, 0x8a, 0x5a, 0x17, 0xaf, 0xcb, 0x0f, 0xb0, 0x9d, 0xab, 0x54, 0xf1,
	0x36, 0x05, 0x0d, 0x06, 0xe3, 0xca, 0x78, 0x8a, 0xf7, 0x55, 0xbc, 0x65, 0xa8, 0xe2, 0xa4, 0x96,
	0x04, 0x2b, 0x4e, 0x8a, 0xd8, 0xfb, 0x9a, 0x39, 0x33, 0xed, 0x13, 0x89, 0x31, 0xba, 0x78, 0xad,
	0x6b, 0xa8, 0xe3, 0x21, 0x6f, 0x76, 0x75, 0xba, 0xeb, 0xe4, 0xa8, 0xbb, 0x9a, 0x77, 0xab, 0x79,
	0x33, 0x68, 0x3a, 0x47, 0xf7, 0x9c, 0xdb, 0xe9, 0xb9, 0xae, 0x8a, 0xec, 0x99, 0x8a, 0x6f, 0xd8,
	0x70, 0x01, 0xd1, 0x7b, 0xa8, 0x49, 0xc6, 0x31, 0xd7, 0x28, 0xf8, 0xbb, 0xc7, 0x9c, 0xf9, 0xa3,
	0x48, 0x69, 0x00, 0x18, 0x72, 0x59, 0x5d, 0xb9, 0xce, 0x98, 0xf3, 0x1e, 0x60, 0x4f, 0x12, 0x2b,
	0x25, 0x1b, 0x8c, 0x57, 0x2f, 0x8b, 0xfc, 0x29, 0x79, 0xa0, 0xa8, 0x96, 0xb2, 0x65, 0x0c, 0x73,
	0xfa, 0x1d, 0x73, 0xce, 0xd4, 0xcd, 0x2b, 0xec, 0x77, 0x35, 0x06, 0x1a, 0x8c, 0xdf, 0xc4, 0xb5,
	0x7e, 0xaa, 0x9a, 0x06, 0x06, 0xe3, 0x7d, 0xc9, 0x4e, 0xc3, 0x2a, 0x8a, 0xa0, 0x2c, 0xf5, 0x16,
	0x35, 0xba, 0xbb, 0x24, 0x16, 0xe8, 0x2a, 0x97, 0xcd, 0x67, 0x94, 0x90, 0x26, 0x85, 0xb9, 0xd1,
	0x00, 0x2f, 0x7d, 0x77, 0x62, 0x63, 0x6e, 0x0a, 0xe1, 0xc9, 0x77, 0xa2, 0x4a, 0xa5, 0x0e, 0x32,
	0x0a, 0x9a, 0x14, 0x59, 0x97, 0x96, 0xcb, 0x22, 0xcf, 0x37, 0x24, 0xa9, 0xcb, 0x1b, 0x8c, 0x2d,
	0xce, 0xa1, 0xa4, 0x51, 0xe0, 0x70, 0x5c, 0x06, 0x5b, 0x36, 0x9a, 0x3f, 0x8a, 0x2c, 0x83, 0x34,
	0x4c, 0xe2, 0x8c, 0xfe, 0x29, 0x29, 0xd8, 0x48, 0xdd, 0x12, 0xe8, 0xfc, 0x87, 0x66, 0x1e, 0x8c,
	0xb9, 0x02, 0xf8, 0xd1, 0x30, 0x89, 0xf5, 0x4f, 0x12, 0x5c, 0x52, 0xc7, 0x57, 0x6b, 0xf4, 0xb4,
	0xaf, 0x3c, 0x55, 0x68, 0x3d, 0xa4, 0xa2, 0xfb, 0xf6, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x91,
	0x73, 0x16, 0x98, 0x0e, 0x09, 0x00, 0x00,
}
