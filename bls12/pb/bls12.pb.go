// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bls12.proto

package bls12_pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Proof struct {
	// challenge time
	Seed int64 `protobuf:"varint,1,opt,name=seed,proto3" json:"seed,omitempty"`
	// hash of data name
	Hash []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	// data owner
	Owner string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	// challenge Sponsor
	Sponsor string `protobuf:"bytes,4,opt,name=sponsor,proto3" json:"sponsor,omitempty"`
	// challenge to
	Response string `protobuf:"bytes,5,opt,name=response,proto3" json:"response,omitempty"`
	// data sign
	Delta []byte `protobuf:"bytes,6,opt,name=delta,proto3" json:"delta,omitempty"`
	// data g1
	G1Res []byte `protobuf:"bytes,7,opt,name=G1res,proto3" json:"G1res,omitempty"`
	// data g2
	G2Res                []byte   `protobuf:"bytes,8,opt,name=G2res,proto3" json:"G2res,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Proof) Reset()         { *m = Proof{} }
func (m *Proof) String() string { return proto.CompactTextString(m) }
func (*Proof) ProtoMessage()    {}
func (*Proof) Descriptor() ([]byte, []int) {
	return fileDescriptor_520c2cbd23465a37, []int{0}
}
func (m *Proof) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Proof.Unmarshal(m, b)
}
func (m *Proof) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Proof.Marshal(b, m, deterministic)
}
func (m *Proof) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Proof.Merge(m, src)
}
func (m *Proof) XXX_Size() int {
	return xxx_messageInfo_Proof.Size(m)
}
func (m *Proof) XXX_DiscardUnknown() {
	xxx_messageInfo_Proof.DiscardUnknown(m)
}

var xxx_messageInfo_Proof proto.InternalMessageInfo

func (m *Proof) GetSeed() int64 {
	if m != nil {
		return m.Seed
	}
	return 0
}

func (m *Proof) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Proof) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Proof) GetSponsor() string {
	if m != nil {
		return m.Sponsor
	}
	return ""
}

func (m *Proof) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func (m *Proof) GetDelta() []byte {
	if m != nil {
		return m.Delta
	}
	return nil
}

func (m *Proof) GetG1Res() []byte {
	if m != nil {
		return m.G1Res
	}
	return nil
}

func (m *Proof) GetG2Res() []byte {
	if m != nil {
		return m.G2Res
	}
	return nil
}

func init() {
	proto.RegisterType((*Proof)(nil), "bls12.pb.Proof")
}

func init() { proto.RegisterFile("bls12.proto", fileDescriptor_520c2cbd23465a37) }

var fileDescriptor_520c2cbd23465a37 = []byte{
	// 169 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0xcf, 0x3f, 0xaa, 0xc2, 0x40,
	0x10, 0xc7, 0x71, 0xf6, 0xe5, 0xef, 0x5b, 0xad, 0x06, 0x8b, 0xc1, 0x2a, 0x58, 0xa5, 0x12, 0x12,
	0x0f, 0x61, 0x2b, 0xb9, 0x41, 0x42, 0x46, 0x52, 0x84, 0x4c, 0x98, 0x09, 0x78, 0x3a, 0xef, 0x26,
	0x3b, 0x1b, 0xed, 0x7e, 0x9f, 0xef, 0xc2, 0x2e, 0xeb, 0x0f, 0xc3, 0xac, 0x4d, 0x7b, 0x5d, 0x85,
	0x37, 0x86, 0x72, 0xc7, 0x70, 0x79, 0x3b, 0x9f, 0x3d, 0x84, 0xf9, 0x09, 0xe0, 0x53, 0x25, 0x1a,
	0xd1, 0x55, 0xae, 0x4e, 0x3a, 0xdb, 0xa1, 0x4d, 0xbd, 0x4e, 0xf8, 0x57, 0xb9, 0xfa, 0xd8, 0xd9,
	0x86, 0x93, 0xcf, 0xf8, 0xb5, 0x90, 0x60, 0x52, 0xb9, 0xfa, 0xbf, 0x8b, 0x00, 0xf4, 0x85, 0xae,
	0xbc, 0x28, 0x0b, 0xa6, 0xd6, 0xbf, 0x84, 0xb3, 0x2f, 0x85, 0x0c, 0x84, 0x99, 0x1d, 0xfd, 0x1c,
	0xee, 0x1a, 0x69, 0xde, 0x7a, 0xcc, 0xed, 0x81, 0x88, 0x50, 0xef, 0x8d, 0x90, 0x62, 0x11, 0xab,
	0xc1, 0x6a, 0x1b, 0x6a, 0xb9, 0xd7, 0x80, 0x21, 0xb7, 0x0f, 0xdd, 0x3e, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x03, 0xe5, 0x9f, 0x1b, 0xdf, 0x00, 0x00, 0x00,
}
